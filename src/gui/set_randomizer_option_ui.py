# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file './set_randomizer_option.ui'
#
# Created by: PyQt5 UI code generator 5.13.0
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_SetRandomizerOptionDialog(object):
    def setupUi(self, SetRandomizerOptionDialog):
        SetRandomizerOptionDialog.setObjectName("SetRandomizerOptionDialog")
        SetRandomizerOptionDialog.resize(514, 301)
        self.tabWidget = QtWidgets.QTabWidget(SetRandomizerOptionDialog)
        self.tabWidget.setGeometry(QtCore.QRect(10, 10, 491, 251))
        self.tabWidget.setObjectName("tabWidget")
        self.tab_settings = QtWidgets.QWidget()
        self.tab_settings.setObjectName("tab_settings")
        self.cardTypeSelector = QtWidgets.QComboBox(self.tab_settings)
        self.cardTypeSelector.setGeometry(QtCore.QRect(10, 0, 231, 41))
        self.cardTypeSelector.setMaxVisibleItems(10)
        self.cardTypeSelector.setObjectName("cardTypeSelector")
        self.cardTypeSelector.addItem("")
        self.enableCheckBox = QtWidgets.QCheckBox(self.tab_settings)
        self.enableCheckBox.setGeometry(QtCore.QRect(310, 0, 171, 41))
        self.enableCheckBox.setToolTip("")
        self.enableCheckBox.setChecked(True)
        self.enableCheckBox.setAutoRepeat(False)
        self.enableCheckBox.setTristate(False)
        self.enableCheckBox.setObjectName("enableCheckBox")
        self.cssQueryLabel = QtWidgets.QLabel(self.tab_settings)
        self.cssQueryLabel.setGeometry(QtCore.QRect(10, 70, 81, 16))
        self.cssQueryLabel.setObjectName("cssQueryLabel")
        self.cssColorsLineEdit = QtWidgets.QLineEdit(self.tab_settings)
        self.cssColorsLineEdit.setEnabled(True)
        self.cssColorsLineEdit.setGeometry(QtCore.QRect(110, 100, 361, 21))
        self.cssColorsLineEdit.setObjectName("cssColorsLineEdit")
        self.cssColorsLabel = QtWidgets.QLabel(self.tab_settings)
        self.cssColorsLabel.setGeometry(QtCore.QRect(10, 100, 81, 16))
        self.cssColorsLabel.setObjectName("cssColorsLabel")
        self.openDelimLabel = QtWidgets.QLabel(self.tab_settings)
        self.openDelimLabel.setGeometry(QtCore.QRect(10, 160, 101, 21))
        self.openDelimLabel.setObjectName("openDelimLabel")
        self.openDelimLineEdit = QtWidgets.QLineEdit(self.tab_settings)
        self.openDelimLineEdit.setGeometry(QtCore.QRect(110, 160, 71, 21))
        self.openDelimLineEdit.setObjectName("openDelimLineEdit")
        self.cssQueryLineEdit = QtWidgets.QLineEdit(self.tab_settings)
        self.cssQueryLineEdit.setGeometry(QtCore.QRect(110, 70, 221, 21))
        self.cssQueryLineEdit.setObjectName("cssQueryLineEdit")
        self.fieldPaddingSpinBox = QtWidgets.QSpinBox(self.tab_settings)
        self.fieldPaddingSpinBox.setGeometry(QtCore.QRect(110, 190, 71, 21))
        self.fieldPaddingSpinBox.setObjectName("fieldPaddingSpinBox")
        self.fieldPaddingLabel = QtWidgets.QLabel(self.tab_settings)
        self.fieldPaddingLabel.setGeometry(QtCore.QRect(10, 190, 101, 21))
        self.fieldPaddingLabel.setObjectName("fieldPaddingLabel")
        self.lineTop = QtWidgets.QFrame(self.tab_settings)
        self.lineTop.setGeometry(QtCore.QRect(-70, 40, 761, 21))
        self.lineTop.setFrameShape(QtWidgets.QFrame.HLine)
        self.lineTop.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.lineTop.setObjectName("lineTop")
        self.closeDelimLabel = QtWidgets.QLabel(self.tab_settings)
        self.closeDelimLabel.setGeometry(QtCore.QRect(300, 160, 101, 21))
        self.closeDelimLabel.setObjectName("closeDelimLabel")
        self.fieldSeparatorLabel = QtWidgets.QLabel(self.tab_settings)
        self.fieldSeparatorLabel.setGeometry(QtCore.QRect(300, 190, 101, 21))
        self.fieldSeparatorLabel.setObjectName("fieldSeparatorLabel")
        self.closeDelimLineEdit = QtWidgets.QLineEdit(self.tab_settings)
        self.closeDelimLineEdit.setGeometry(QtCore.QRect(400, 160, 71, 21))
        self.closeDelimLineEdit.setObjectName("closeDelimLineEdit")
        self.fieldSeparatorLineEdit = QtWidgets.QLineEdit(self.tab_settings)
        self.fieldSeparatorLineEdit.setGeometry(QtCore.QRect(400, 190, 71, 21))
        self.fieldSeparatorLineEdit.setObjectName("fieldSeparatorLineEdit")
        self.autoGenerateCheckBox = QtWidgets.QCheckBox(self.tab_settings)
        self.autoGenerateCheckBox.setGeometry(QtCore.QRect(360, 70, 121, 20))
        self.autoGenerateCheckBox.setObjectName("autoGenerateCheckBox")
        self.collectiveIndexingCheckBox = QtWidgets.QCheckBox(self.tab_settings)
        self.collectiveIndexingCheckBox.setGeometry(QtCore.QRect(10, 130, 181, 20))
        self.collectiveIndexingCheckBox.setTristate(False)
        self.collectiveIndexingCheckBox.setObjectName("collectiveIndexingCheckBox")
        self.randomStartIndexCheckBox = QtWidgets.QCheckBox(self.tab_settings)
        self.randomStartIndexCheckBox.setGeometry(QtCore.QRect(210, 130, 181, 20))
        self.randomStartIndexCheckBox.setObjectName("randomStartIndexCheckBox")
        self.tabWidget.addTab(self.tab_settings, "")
        self.tab_about = QtWidgets.QWidget()
        self.tab_about.setObjectName("tab_about")
        self.aboutText = QtWidgets.QTextBrowser(self.tab_about)
        self.aboutText.setGeometry(QtCore.QRect(30, 10, 431, 201))
        self.aboutText.setOpenExternalLinks(True)
        self.aboutText.setObjectName("aboutText")
        self.buttonBox_2 = QtWidgets.QDialogButtonBox(self.tab_about)
        self.buttonBox_2.setGeometry(QtCore.QRect(260, 240, 221, 41))
        self.buttonBox_2.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox_2.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox_2.setObjectName("buttonBox_2")
        self.tabWidget.addTab(self.tab_about, "")
        self.buttonBox = QtWidgets.QDialogButtonBox(SetRandomizerOptionDialog)
        self.buttonBox.setGeometry(QtCore.QRect(280, 260, 221, 41))
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")

        self.retranslateUi(SetRandomizerOptionDialog)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(SetRandomizerOptionDialog)

    def retranslateUi(self, SetRandomizerOptionDialog):
        _translate = QtCore.QCoreApplication.translate
        SetRandomizerOptionDialog.setWindowTitle(_translate("SetRandomizerOptionDialog", "Set Randomizer Options"))
        self.tab_settings.setWhatsThis(_translate("SetRandomizerOptionDialog", "<html><head/><body><p><br/></p></body></html>"))
        self.cardTypeSelector.setItemText(0, _translate("SetRandomizerOptionDialog", "CardType"))
        self.enableCheckBox.setText(_translate("SetRandomizerOptionDialog", "Enable Randomized Sets"))
        self.cssQueryLabel.setToolTip(_translate("SetRandomizerOptionDialog", "<html><head/><body><p>A CSS query to select the elements which contain all Multiple Choices.</p></body></html>"))
        self.cssQueryLabel.setText(_translate("SetRandomizerOptionDialog", "CSS Query"))
        self.cssColorsLineEdit.setText(_translate("SetRandomizerOptionDialog", "black, white, grey"))
        self.cssColorsLabel.setToolTip(_translate("SetRandomizerOptionDialog", "<html><head/><body><p>A list of CSS colors. The first field will be displayed with the first color. Colors will be repeated, if fields exceed colors.</p></body></html>"))
        self.cssColorsLabel.setText(_translate("SetRandomizerOptionDialog", "CSS Colors"))
        self.openDelimLabel.setText(_translate("SetRandomizerOptionDialog", "Open Delimiter"))
        self.openDelimLineEdit.setText(_translate("SetRandomizerOptionDialog", "((("))
        self.cssQueryLineEdit.setText(_translate("SetRandomizerOptionDialog", "div#fake"))
        self.fieldPaddingSpinBox.setSuffix(_translate("SetRandomizerOptionDialog", "px"))
        self.fieldPaddingLabel.setText(_translate("SetRandomizerOptionDialog", "Field Padding"))
        self.closeDelimLabel.setText(_translate("SetRandomizerOptionDialog", "Close Delimiter"))
        self.fieldSeparatorLabel.setText(_translate("SetRandomizerOptionDialog", "Field Separator"))
        self.closeDelimLineEdit.setText(_translate("SetRandomizerOptionDialog", ")))"))
        self.fieldSeparatorLineEdit.setText(_translate("SetRandomizerOptionDialog", "%%%"))
        self.autoGenerateCheckBox.setToolTip(_translate("SetRandomizerOptionDialog", "Check if you want to generate the div tags for the card. Check if this if you have no idea how to edit card templates."))
        self.autoGenerateCheckBox.setText(_translate("SetRandomizerOptionDialog", "Auto Generate"))
        self.collectiveIndexingCheckBox.setToolTip(_translate("SetRandomizerOptionDialog", "Normally, the choice of color is reset for each new randomized set. With this option, all elements collectively will iterate through the colors. E.g. Two sets with one element each will both have color 1, with this option turned on, the second one will have color 2."))
        self.collectiveIndexingCheckBox.setText(_translate("SetRandomizerOptionDialog", "Collective Color Indexing"))
        self.randomStartIndexCheckBox.setToolTip(_translate("SetRandomizerOptionDialog", "Normally, the choice of color always start with color 1. With this option turned on, the first color will be chosen at random, before normally iterating through the colors again."))
        self.randomStartIndexCheckBox.setText(_translate("SetRandomizerOptionDialog", "Random Color Start Index"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_settings), _translate("SetRandomizerOptionDialog", "Settings"))
        self.aboutText.setHtml(_translate("SetRandomizerOptionDialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'.SF NS Text\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Anki Set Randomizer</span> was developed by <a href=\"https://github.com/hgiesel\"><span style=\" text-decoration: underline; color:#0000ff;\">Henrik Giesel (hgiesel)</span></a>. <br />🐇 If you like my work, consider supporting me on <a href=\"https://ko-fi.com/hgiesel\"><span style=\" text-decoration: underline; color:#0000ff;\">Ko-Fi</span></a>. 🐇</p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Anki Persistence</span> was developed by <a href=\"https://github.com/SimonLammer/anki-persistence\"><span style=\" text-decoration: underline; color:#0000ff;\">Simmon Lammer</span></a>.<br /></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">For more information about how to use Anki SetRandomizer, you should check out <a href=\"https://github.com/hgiesel/anki-set-randomizer/tree/master\"><span style=\" text-decoration: underline; color:#0000ff;\">the docs</span></a>.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Thanks to reddit user u/im__aarkay for testing it on AnkiDroid.</p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_about), _translate("SetRandomizerOptionDialog", "About"))
