# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file './sr_source_mode_tab.ui'
#
# Created by: PyQt5 UI code generator 5.13.0
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_SRSourceModeTab(object):
    def setupUi(self, SRSourceModeTab):
        SRSourceModeTab.setObjectName("SRSourceModeTab")
        SRSourceModeTab.resize(646, 382)
        self.gridLayout_3 = QtWidgets.QGridLayout(SRSourceModeTab)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.widget = QtWidgets.QWidget(SRSourceModeTab)
        self.widget.setObjectName("widget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.cloze = QtWidgets.QGroupBox(self.widget)
        self.cloze.setObjectName("cloze")
        self.gridLayout = QtWidgets.QGridLayout(self.cloze)
        self.gridLayout.setObjectName("gridLayout")
        self.clozeShortcutsEnabledCheckBox = QtWidgets.QCheckBox(self.cloze)
        self.clozeShortcutsEnabledCheckBox.setObjectName("clozeShortcutsEnabledCheckBox")
        self.gridLayout.addWidget(self.clozeShortcutsEnabledCheckBox, 0, 0, 1, 4)
        self.clozeCloseDelimLineEdit = QtWidgets.QLineEdit(self.cloze)
        self.clozeCloseDelimLineEdit.setObjectName("clozeCloseDelimLineEdit")
        self.gridLayout.addWidget(self.clozeCloseDelimLineEdit, 3, 3, 1, 1)
        self.clozeOpenDelimLabel = QtWidgets.QLabel(self.cloze)
        self.clozeOpenDelimLabel.setObjectName("clozeOpenDelimLabel")
        self.gridLayout.addWidget(self.clozeOpenDelimLabel, 3, 0, 1, 1)
        self.clozeOpenDelimLineEdit = QtWidgets.QLineEdit(self.cloze)
        self.clozeOpenDelimLineEdit.setObjectName("clozeOpenDelimLineEdit")
        self.gridLayout.addWidget(self.clozeOpenDelimLineEdit, 3, 1, 1, 1)
        self.clozeCloseDelimLabel = QtWidgets.QLabel(self.cloze)
        self.clozeCloseDelimLabel.setObjectName("clozeCloseDelimLabel")
        self.gridLayout.addWidget(self.clozeCloseDelimLabel, 3, 2, 1, 1)
        self.clozeVsPrefixLineEdit = QtWidgets.QLineEdit(self.cloze)
        self.clozeVsPrefixLineEdit.setReadOnly(False)
        self.clozeVsPrefixLineEdit.setObjectName("clozeVsPrefixLineEdit")
        self.gridLayout.addWidget(self.clozeVsPrefixLineEdit, 2, 2, 1, 2)
        self.clozeVsPrefixLabel = QtWidgets.QLabel(self.cloze)
        self.clozeVsPrefixLabel.setObjectName("clozeVsPrefixLabel")
        self.gridLayout.addWidget(self.clozeVsPrefixLabel, 2, 0, 1, 2)
        self.verticalLayout.addWidget(self.cloze)
        self.occlusion = QtWidgets.QGroupBox(self.widget)
        self.occlusion.setObjectName("occlusion")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.occlusion)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.enableCheckBox_2 = QtWidgets.QCheckBox(self.occlusion)
        self.enableCheckBox_2.setObjectName("enableCheckBox_2")
        self.gridLayout_2.addWidget(self.enableCheckBox_2, 1, 0, 1, 1)
        self.nameLineEdit_2 = QtWidgets.QLineEdit(self.occlusion)
        self.nameLineEdit_2.setText("")
        self.nameLineEdit_2.setReadOnly(True)
        self.nameLineEdit_2.setObjectName("nameLineEdit_2")
        self.gridLayout_2.addWidget(self.nameLineEdit_2, 3, 1, 1, 1)
        self.nameLabel_2 = QtWidgets.QLabel(self.occlusion)
        self.nameLabel_2.setObjectName("nameLabel_2")
        self.gridLayout_2.addWidget(self.nameLabel_2, 3, 0, 1, 1)
        self.enableCheckBox_3 = QtWidgets.QCheckBox(self.occlusion)
        self.enableCheckBox_3.setObjectName("enableCheckBox_3")
        self.gridLayout_2.addWidget(self.enableCheckBox_3, 2, 0, 1, 1)
        self.verticalLayout.addWidget(self.occlusion)
        self.gridLayout_3.addWidget(self.widget, 0, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(223, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem, 0, 1, 2, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 125, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_3.addItem(spacerItem1, 1, 0, 1, 1)

        self.retranslateUi(SRSourceModeTab)
        QtCore.QMetaObject.connectSlotsByName(SRSourceModeTab)

    def retranslateUi(self, SRSourceModeTab):
        _translate = QtCore.QCoreApplication.translate
        SRSourceModeTab.setWindowTitle(_translate("SRSourceModeTab", "Form"))
        self.cloze.setTitle(_translate("SRSourceModeTab", "Cloze Tests"))
        self.clozeShortcutsEnabledCheckBox.setToolTip(_translate("SRSourceModeTab", "<html><head/><body><p>Advanced feature. Check this if you want to treat the content of the &quot;Open Delimiter&quot;, &quot;Close Delimiter&quot;, and &quot;Field separator&quot; as regular expressions.</p></body></html>"))
        self.clozeShortcutsEnabledCheckBox.setText(_translate("SRSourceModeTab", "Enable Cloze Shortcuts"))
        self.clozeCloseDelimLineEdit.setText(_translate("SRSourceModeTab", "]]"))
        self.clozeOpenDelimLabel.setText(_translate("SRSourceModeTab", "Open Delimiter"))
        self.clozeOpenDelimLineEdit.setText(_translate("SRSourceModeTab", "[["))
        self.clozeCloseDelimLabel.setText(_translate("SRSourceModeTab", "Close Delimiter"))
        self.clozeVsPrefixLineEdit.setText(_translate("SRSourceModeTab", "c"))
        self.clozeVsPrefixLabel.setText(_translate("SRSourceModeTab", "Cloze Value Set Prefix:"))
        self.occlusion.setTitle(_translate("SRSourceModeTab", "Occlusion Tests"))
        self.enableCheckBox_2.setToolTip(_translate("SRSourceModeTab", "<html><head/><body><p>Advanced feature. Check this if you want to treat the content of the &quot;Open Delimiter&quot;, &quot;Close Delimiter&quot;, and &quot;Field separator&quot; as regular expressions.</p></body></html>"))
        self.enableCheckBox_2.setText(_translate("SRSourceModeTab", "Enable Occlusion Menu Option"))
        self.nameLabel_2.setText(_translate("SRSourceModeTab", "Occlusion Value Set Prefix:"))
        self.enableCheckBox_3.setToolTip(_translate("SRSourceModeTab", "<html><head/><body><p>Advanced feature. Check this if you want to treat the content of the &quot;Open Delimiter&quot;, &quot;Close Delimiter&quot;, and &quot;Field separator&quot; as regular expressions.</p></body></html>"))
        self.enableCheckBox_3.setText(_translate("SRSourceModeTab", "Enable Occlusion Shortcut"))
